[{"C:\\Users\\Jeremiah\\Desktop\\DevStuff\\rng-app-ts\\src\\App.tsx":"1"},{"size":1638,"mtime":1608049926094,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"1e46ev9","C:\\Users\\Jeremiah\\Desktop\\DevStuff\\rng-app-ts\\src\\App.tsx",["7"],"import React from \"react\";\n\nexport const App: React.FC = () => {\n  const [minVal, setMin] = React.useState(0);\n  const [maxVal, setMax] = React.useState(0);\n  const [randomVal, setRandomVal] = React.useState(0);\n\n  function handleRandomNumber(e: React.FormEvent<HTMLFormElement>) {\n    if (minVal < maxVal && minVal != maxVal) {\n      e.preventDefault();\n      setRandomVal(\n        Math.floor(minVal - 0.5 + Math.random() * (maxVal - minVal + 1))\n      );\n    } else {\n      alert(\"Input Rejected. Enter the Correct Input\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 id=\"title\">Random Number Generator</h1>\n      <div className=\"Container\">\n        <form onSubmit={handleRandomNumber}>\n          <label htmlFor=\"output-stuff\">NUMBER :</label>\n          <input disabled id=\"output\" type=\"text\" value={randomVal} />\n\n          <div className=\"min-area inline\">\n            <label htmlFor=\"min-input-box\">MIN :</label>\n            <input\n              className=\"min-input validate\"\n              type=\"number\"\n              value={minVal}\n              onChange={(e) => setMin(parseInt(e.currentTarget.value))}\n            />\n          </div>\n\n          <div className=\"max-area\">\n            <label htmlFor=\"max-input-box\">MAX:</label>\n            <input\n              className=\"max-input\"\n              type=\"number\"\n              value={maxVal}\n              onChange={(e) => setMax(parseInt(e.currentTarget.value))}\n            />\n          </div>\n\n          <button className=\"waves-effect waves-light btn-large\" type=\"submit\">\n            Generate\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n",{"ruleId":"8","severity":1,"message":"9","line":9,"column":35,"nodeType":"10","messageId":"11","endLine":9,"endColumn":37},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]